// <auto-generated />
using System;
using ApiRest.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiRest.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiRest.Models.Etiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("ApiRest.Models.Juego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accesible_M")
                        .HasColumnType("bit");

                    b.Property<bool>("Accesible_PC")
                        .HasColumnType("bit");

                    b.Property<string>("Compania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Juego");
                });

            modelBuilder.Entity("ApiRest.Models.JuegoXEtiqueta", b =>
                {
                    b.Property<int>("Id_Juego")
                        .HasColumnType("int");

                    b.Property<int>("Id_Etiqueta")
                        .HasColumnType("int");

                    b.Property<int>("EtiquetaId")
                        .HasColumnType("int");

                    b.Property<int>("JuegoId")
                        .HasColumnType("int");

                    b.HasKey("Id_Juego", "Id_Etiqueta");

                    b.HasIndex("EtiquetaId");

                    b.HasIndex("JuegoId");

                    b.ToTable("JuegoXEtiqueta");
                });

            modelBuilder.Entity("ApiRest.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("ApiRest.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Dinero")
                        .HasColumnType("real");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiRest.Models.UsuarioXJuego", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<int>("Id_Juego")
                        .HasColumnType("int");

                    b.Property<int>("JuegoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id_Usuario", "Id_Juego");

                    b.HasIndex("JuegoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioXJuego");
                });

            modelBuilder.Entity("ApiRest.Models.JuegoXEtiqueta", b =>
                {
                    b.HasOne("ApiRest.Models.Etiqueta", "Etiqueta")
                        .WithMany("JuegoXEtiquetas")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Juego", "Juego")
                        .WithMany("JuegoXEtiquetas")
                        .HasForeignKey("JuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etiqueta");

                    b.Navigation("Juego");
                });

            modelBuilder.Entity("ApiRest.Models.Usuario", b =>
                {
                    b.HasOne("ApiRest.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ApiRest.Models.UsuarioXJuego", b =>
                {
                    b.HasOne("ApiRest.Models.Juego", "Juego")
                        .WithMany("UsuarioXJuego")
                        .HasForeignKey("JuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Usuario", "Usuario")
                        .WithMany("UsuarioXJuego")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Juego");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiRest.Models.Etiqueta", b =>
                {
                    b.Navigation("JuegoXEtiquetas");
                });

            modelBuilder.Entity("ApiRest.Models.Juego", b =>
                {
                    b.Navigation("JuegoXEtiquetas");

                    b.Navigation("UsuarioXJuego");
                });

            modelBuilder.Entity("ApiRest.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ApiRest.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioXJuego");
                });
#pragma warning restore 612, 618
        }
    }
}
